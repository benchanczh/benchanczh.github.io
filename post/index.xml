<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Benjamin&#39;s Blog</title>
    <link>/post/</link>
    <description>Recent content in Posts on Benjamin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ca</language>
    <lastBuildDate>Mon, 25 Sep 2017 18:56:02 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Sieve of Eratosthenes to find prime numbers</title>
      <link>/post/sieve_of_eratosthenes/</link>
      <pubDate>Mon, 25 Sep 2017 18:56:02 +0000</pubDate>
      
      <guid>/post/sieve_of_eratosthenes/</guid>
      <description>Mathedemo  MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}});    We know a prime number is a natural number greater than 1 has no positive divisors other than 1 and itself. If Someone asks you, “What are all prime numbers less than 1 million?”, how can you answer the question?
There are many algorithms to find all prime numbers up to any given limit. I’m going to cover the Sieve of Eratosthenes, a simple but powerful algorithm, in this article.</description>
    </item>
    
    <item>
      <title>Euler Problem 2: Even Fibonacci numbers</title>
      <link>/post/euler_problem_2/</link>
      <pubDate>Sat, 23 Sep 2017 12:01:46 +0000</pubDate>
      
      <guid>/post/euler_problem_2/</guid>
      <description>Mathedemo  MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}});    Euler Problem 2 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
\[1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\]
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</description>
    </item>
    
    <item>
      <title>Project Euler Solutions in R and Python</title>
      <link>/post/euler_problem_1/</link>
      <pubDate>Sat, 16 Sep 2017 18:29:24 +0000</pubDate>
      
      <guid>/post/euler_problem_1/</guid>
      <description>Mathedemo  MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}});    The Devil is in the Data website presents solutions to Project Euler problems in R. Project Euler (named after Swiss mathematician Leonhard Euler) is a competition with computational problems. Participants solve these problems using computer code, using many different languages.
This blog was inspired by Devil is in the Data and tries to provide detailed solution in both R and Python to a Euler problem per week.</description>
    </item>
    
    <item>
      <title>Using learnr to build an interactive R tutorial</title>
      <link>/post/tidyverse_tutorial_on_learnr/</link>
      <pubDate>Sat, 16 Sep 2017 16:25:50 +0000</pubDate>
      
      <guid>/post/tidyverse_tutorial_on_learnr/</guid>
      <description>In June 2017, I joined a major Canadian bank as a data analyst. I was suprised that most of my colleagues didn’t use R or Python for their day-to-day data analysis. I’ve been convincing my colleagues that R and Python are great tools for data analysis and trying to give an introduction on these two programming languages.
Last week I saw a post about learnr package on RStudio Developer Blog and I believed this package would be a great tool to create an interactive R tutorial for my team.</description>
    </item>
    
  </channel>
</rss>